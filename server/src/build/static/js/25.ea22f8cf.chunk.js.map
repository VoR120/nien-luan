{"version":3,"sources":["component/MySnackbar/index.js","component/DrawerList/index.js","component/AdminDrawer/index.js","component/AdminHeader/index.js","component/LayoutAdmin/LayoutAdmin.js","pages/Admin/ADashboard/index.js"],"names":["Alert","React","props","ref","elevation","variant","CustomizedSnackbars","SnackbarContext","openSnackbar","openSnackbarDispatch","handleClose","event","reason","type","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","severity","sx","width","message","useStyles","makeStyles","theme","toolbarMixins","mixins","toolbar","backgroundColor","palette","primary","light","icon","marginRight","spacing","color","grey","list","overflow","paddingTop","paddingBottom","DrawerList","createTheme","components","MuiListItem","styleOverrides","root","marginLeft","borderTopLeftRadius","borderBottomLeftRadius","classes","Paper","className","paper","square","List","to","ListItem","button","ListItemText","drawerWidth","appBar","breakpoints","up","menuButton","display","drawer","secondary","main","flexShrink","drawerPaper","dark","borderRight","content","flexGrow","padding","fontSize","AdminDrawer","window","useState","mobileOpen","setMobileOpen","container","undefined","document","body","Hidden","smUp","implementation","Drawer","anchor","ModalProps","keepMounted","mdDown","header","text","boxShadow","title","fontWeight","grow","sectionDesktop","search","justifyContent","alignItems","menuList","paddingRight","useStyleBase","borderRadius","name","AdminHeader","aDispatch","useContext","AuthContext","categoryDispatch","CategoryContext","productDispatch","ProductContext","history","useHistory","setOpen","anchorRef","useRef","current","contains","target","handleLogout","e","preventDefault","adminLogout","push","handleListKeyDown","key","prevOpen","useEffect","focus","AppBar","position","Toolbar","FormControl","size","Input","disableUnderline","placeholder","IconButton","onClick","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","MenuItem","useStyle","LayoutAdmin","sidebar","Grid","item","xs","sm","children","ADashboard"],"mappings":"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","file":"static/js/25.ea22f8cf.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { SnackbarContext } from '../../contextAPI/SnackbarContext'\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function CustomizedSnackbars() {\r\n    const { openSnackbar, openSnackbarDispatch } = React.useContext(SnackbarContext)\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        openSnackbarDispatch({ type: 'SET_CLOSE' })\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            open={openSnackbar.open}\r\n            autoHideDuration={6000}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            onClose={handleClose}\r\n        >\r\n            <Alert onClose={handleClose} severity={openSnackbar.type} sx={{ width: '100%' }}>\r\n                {openSnackbar.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}","import List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Paper from '@mui/material/Paper';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport LocalAtmIcon from '@mui/icons-material/LocalAtm';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './styles.css';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { ThemeProvider } from '@emotion/react';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbarMixins: theme.mixins.toolbar,\r\n    toolbar: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: theme.palette.grey[500]\r\n    },\r\n    list: {\r\n        overflow: 'hidden',\r\n        paddingTop: '20px',\r\n        paddingBottom: '20px'\r\n    }\r\n}))\r\n// const useStyleBase = makeStyles(theme => ({\r\n//     root: {\r\n//         marginLeft: theme.spacing(1.2),\r\n//         borderTopLeftRadius: '24px',\r\n//         borderBottomLeftRadius: '24px',\r\n//         color: theme.palette.grey[200],\r\n//     }\r\n// }), { name: 'MuiListItem' })\r\n\r\nconst muiListTheme = createTheme(theme => ({\r\n    components: {\r\n        MuiListItem: {\r\n            styleOverrides: {\r\n                root: {\r\n                    marginLeft: theme.spacing(1.2),\r\n                    borderTopLeftRadius: '24px',\r\n                    borderBottomLeftRadius: '24px',\r\n                    color: theme.palette.grey[200],\r\n                }\r\n            }\r\n        }\r\n    }\r\n}))\r\nconst DrawerList = () => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Paper className={classes.paper} elevation={0} square>\r\n                <div className={`${classes.toolbarMixins} + ${classes.toolbar}`}></div>\r\n            </Paper>\r\n            <List className={classes.list}>\r\n                {/* <NavLink to={\"/admin\"}>\r\n                    <ListItem button>\r\n                        <HomeIcon className={classes.icon} />\r\n                        <ListItemText primary=\"Dashboard\" />\r\n                    </ListItem>\r\n                </NavLink> */}\r\n                <NavLink to={\"/product\"}>\r\n                    <ListItem button>\r\n                        <ListIcon className={classes.icon} />\r\n                        <ListItemText primary=\"Sản phẩm\" />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink to={\"/category\"}>\r\n                    <ListItem button>\r\n                        <CategoryIcon className={classes.icon} />\r\n                        <ListItemText primary=\"Danh mục\" />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink to={\"/customer\"}>\r\n                    <ListItem button>\r\n                        <PeopleAltIcon className={classes.icon} />\r\n                        <ListItemText primary=\"Khách hàng\" />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink to={\"/aorder\"}>\r\n                    <ListItem button>\r\n                        <ShoppingCartIcon className={classes.icon} />\r\n                        <ListItemText primary=\"Đơn hàng\" />\r\n                    </ListItem>\r\n                </NavLink>\r\n                {/* <ListItem button>\r\n                    <LocalAtmIcon className={classes.icon} />\r\n                    <ListItemText primary=\"Revenue\" />\r\n                </ListItem> */}\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DrawerList;","import makeStyles from '@mui/styles/makeStyles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Hidden from '@mui/material/Hidden';\r\nimport React, { useState } from 'react';\r\nimport DrawerList from '../DrawerList';\r\n\r\nconst drawerWidth = 254;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n        boxShadow: 'none',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    drawer: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.secondary.dark,\r\n        borderRight: 'none',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    icon: {\r\n        color: theme.palette.grey[500],\r\n        marginRight: theme.spacing(2),\r\n        fontSize: theme.spacing(2.5)\r\n    },\r\n}));\r\n\r\nconst AdminDrawer = (props) => {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <nav className={classes.drawer}>\r\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n            <Hidden smUp implementation=\"css\">\r\n                <Drawer\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={mobileOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                    }}\r\n                >\r\n                    <DrawerList />\r\n                </Drawer>\r\n            </Hidden>\r\n            <Hidden mdDown implementation=\"css\">\r\n                <Drawer\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    variant=\"permanent\"\r\n                    open\r\n                >\r\n                    <DrawerList />\r\n                </Drawer>\r\n            </Hidden>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nexport default AdminDrawer;","import { AppBar, FormControl, Input, Toolbar, Badge } from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { adminLogout } from '../../action/authAction';\r\nimport { AuthContext } from '../../contextAPI/AuthContext';\r\nimport { CategoryContext } from '../../contextAPI/CategoryContext';\r\nimport { ProductContext } from '../../contextAPI/ProductContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: theme.palette.text.main,\r\n        boxShadow: 'none'\r\n    },\r\n    title: {\r\n        fontWeight: 500,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    search: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    menuList: {\r\n        color: theme.palette.primary.light,\r\n    },\r\n    icon: {\r\n        color: theme.palette.primary.light,\r\n        marginLeft: theme.spacing(2.5),\r\n        paddingRight: theme.spacing(1.2),\r\n    }\r\n}))\r\n\r\nconst useStyleBase = makeStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.primary.main,\r\n        borderRadius: '0',\r\n        marginLeft: '0'\r\n    }\r\n}), { name: 'MuiMenuItem' })\r\n\r\nconst AdminHeader = (props) => {\r\n    const { aDispatch } = useContext(AuthContext);\r\n    const { categoryDispatch } = useContext(CategoryContext);\r\n    const { productDispatch } = useContext(ProductContext);\r\n    const history = useHistory();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    useStyleBase();\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n        setOpen(false);\r\n        adminLogout(aDispatch, categoryDispatch, productDispatch);\r\n        history.push('/admin/login');\r\n    }\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar className={classes.header} position=\"static\">\r\n            <Toolbar>\r\n                <div className={classes.search}>\r\n                    <SearchIcon className={classes.icon} fontSize=\"large\" />\r\n                    <FormControl size='small'>\r\n                        <Input disableUnderline placeholder=\"Search...\" />\r\n                    </FormControl>\r\n                </div>\r\n                <div className={classes.grow} />\r\n                <div className={classes.sectionDesktop}>\r\n                    {/* <IconButton color=\"primary\" size=\"large\">\r\n                        <Badge badgeContent={4} color=\"error\">\r\n                            <MailIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <IconButton color=\"primary\" size=\"large\">\r\n                        <MailIcon />\r\n                    </IconButton> */}\r\n                    <IconButton\r\n                        color=\"primary\"\r\n                        ref={anchorRef}\r\n                        aria-controls={open ? 'menu-list-grow' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleToggle}\r\n                        size=\"large\">\r\n                        <AccountCircleIcon />\r\n                    </IconButton>\r\n                    <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                        {({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                            >\r\n                                <Paper>\r\n                                    <ClickAwayListener onClickAway={handleClose}>\r\n                                        <MenuList className={classes.menuList} autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                            <MenuItem onClick={handleClose}>Đổi mật khẩu</MenuItem>\r\n                                            <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                                        </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default AdminHeader;","import { Grid } from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React from 'react';\r\nimport AdminDrawer from '../AdminDrawer';\r\nimport AdminHeader from '../AdminHeader';\r\nimport CustomizedSnackbars from '../MySnackbar'\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    content: {\r\n        backgroundColor: theme.palette.secondary.dark,\r\n        padding: theme.spacing(6),\r\n    },\r\n}))\r\n\r\nconst LayoutAdmin = (props) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <>\r\n            {props.sidebar ? (\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={2}>\r\n                        <AdminDrawer />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={10}>\r\n                        <AdminHeader />\r\n                        <div className={classes.content}>\r\n                            {props.children}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            ) : (\r\n                props.children\r\n            )\r\n            }\r\n            <CustomizedSnackbars />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LayoutAdmin;","import { Typography } from '@mui/material';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport React, { useEffect } from 'react';\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport LayoutAdmin from '../../../component/LayoutAdmin/LayoutAdmin';\r\nimport './style.scss'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        fontWeight: '500'\r\n    },\r\n}))\r\n\r\nconst ADashboard = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        history.push('/product')\r\n    }, [])\r\n\r\n    return (\r\n        <LayoutAdmin sidebar>\r\n            <div>\r\n                <Typography className={classes.title} variant=\"h3\" color=\"initial\">Trang quản trị</Typography>\r\n            </div>\r\n        </LayoutAdmin>\r\n    );\r\n};\r\n\r\nexport default ADashboard;"],"sourceRoot":""}